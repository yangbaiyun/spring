<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<description>
		Tests for list and map handling in an XML bean definition file.
	</description>
	
	<bean id="validEmptyWithDescription" class="org.springframework.beans.TestBean">
		<description>
			I have no properties and I'm happy without them. 
		</description>
	</bean>
	
	
	<bean id="jenny" class="org.springframework.beans.TestBean">	
		<property name="name"><value>Jenny</value></property>
		<property name="age"><value>30</value></property>
		<property name="spouse">
		<!-- Could use id and href -->
			<ref local="david"/>
		</property>
	</bean>
	
	<bean id="david" class="org.springframework.beans.TestBean">	
		<description>
			Simple bean, without any collections.
		</description>
		<property name="name">
			<description>The name of the user</description>
			<value>David</value>
		</property>
		<property name="age"><value>27</value></property>
	</bean>
	
	<bean id="rod" class="org.springframework.beans.TestBean">	
		<property name="name"><value>Rod</value></property>
		<property name="age"><value>32</value></property>
		<property name="friends">
			<description>List of Rod's friends</description>
			<list>
				<ref local="jenny"/>
				<ref local="david"/>
			</list>
		</property>
	</bean>
	
	<bean id="pJenny" class="org.springframework.beans.TestBean" singleton="false">
		<property name="name"><value>Jenny</value></property>
		<property name="age"><value>30</value></property>
		<property name="spouse">
		<!-- Could use id and href -->
			<ref local="david"/>
		</property>
	</bean>

	<bean id="pDavid" class="org.springframework.beans.TestBean" singleton="false">
		<property name="name"><value>David</value></property>
		<property name="age"><value>27</value></property>
	</bean>

	<bean id="pRod" class="org.springframework.beans.TestBean" singleton="false">
		<property name="name"><value>Rod</value></property>
		<property name="age"><value>32</value></property>
		<property name="friends">
			<list>
				<ref local="pJenny"/>
				<ref local="pDavid"/>
			</list>
		</property>
	</bean>

	<!--
		Try setting a collection property to a single value
	-->
	<bean id="loner" class="org.springframework.beans.TestBean">	
		<property name="name"><value>loner</value></property>
		<property name="age"><value>26</value></property>
		<property name="friends">
			<list>
				<ref local="david"/>
			</list>
		</property>
	</bean>
	
	<bean id="jumble" class="org.springframework.beans.factory.xml.MixedCollectionBean">	
		<property name="jumble">
			<list>
				<ref local="david"/>
				<value>literal</value>
				<ref local="jenny" />
			</list>
		</property>
	</bean>
	
	<bean id="verbose" class="org.springframework.beans.TestBean">	
		<property name="name"><value>verbose</value></property>
	</bean>
	
	<!--
		Check automatic creation of alias, to allow for
		names that are illegal as XML ids
	-->
	<bean id="aliased" class="org.springframework.beans.TestBean" name="myalias">
		<property name="name"><value>aliased</value></property>
	</bean>
	
	<bean id="multiAliased" class="org.springframework.beans.TestBean" name="alias1,alias2">
		<property name="name"><value>aliased</value></property>
	</bean>

	<bean class="org.springframework.beans.TestBean" name="aliasWithoutId1,aliasWithoutId2,aliasWithoutId3">
		<property name="name"><value>aliased</value></property>
	</bean>

	<bean class="org.springframework.beans.TestBean">
		<property name="name"><value>noname</value></property>
	</bean>

	<bean id="emptyMap" class="org.springframework.beans.factory.HasMap">
		<property name="map">
			<map>
			</map>
		</property>
	</bean>
	
	<bean id="literalMap" class="org.springframework.beans.factory.HasMap">	
		<property name="map">
			<map>
				<entry key="foo"><value>bar</value></entry>
				<entry key="fi"><value>fum</value></entry>
			</map>
		</property>
	</bean>
	
	<bean id="mixedMap" class="org.springframework.beans.factory.HasMap">	
		<property name="map">
			<map>
				<entry key="foo"><value>bar</value></entry>
				<entry key="jenny"><ref local="jenny"/></entry>
			</map>
		</property>
	</bean>
	
	<bean id="pMixedMap" class="org.springframework.beans.factory.HasMap" singleton="false">
		<property name="map">
			<map>
				<entry key="foo"><value>bar</value></entry>
				<entry key="jenny"><ref local="pJenny"/></entry>
			</map>
		</property>
	</bean>

	<bean id="mixedMapWithList" class="org.springframework.beans.factory.HasMap">
		<property name="map">
			<map>
				<entry key="foo"><value>bar</value></entry>
				<entry key="jenny"><ref local="jenny"/></entry>
				<entry key="list">
					<list>
						<value>zero</value>
						<map>
							<entry key="fo"><value>bar</value></entry>
							<entry key="jen"><ref local="jenny"/></entry>
						</map>
						<list>
							<ref local="jenny"/>
							<value>ba</value>
						</list>
					</list>
				</entry>
				<entry key="map">
					<map>
						<entry key="foo"><value>bar</value></entry>
						<entry key="jenny"><ref local="jenny"/></entry>
					</map>
				</entry>
			</map>
		</property>
	</bean>
	
	<bean id="emptyProps" class="org.springframework.beans.factory.HasMap">	
		<property name="map">
			<props>
			</props>
		</property>
	</bean>
	
	
	<bean id="props" class="org.springframework.beans.factory.HasMap">	
		<property name="map">
			<props>
				<prop key="foo">bar</prop>
				<prop key="2">TWO</prop>
			</props>
		</property>
	</bean>
	
	<bean id="objectArray" class="org.springframework.beans.factory.HasMap">	
		<property name="objectArray">
			<list>
				<value>one</value>
				<ref local="jenny"/>
			</list>
		</property>
	</bean>
	
	<bean id="classArray" class="org.springframework.beans.factory.HasMap">	
		<property name="classArray">
			<list>
				<value>java.lang.String</value>
				<value>java.lang.Exception</value>
			</list>
		</property>
	</bean>
	
	<!--
	Why does this fail with arrayStoreException? Seems like no
	conversion takes place? RJ, June 7 03
	<bean id="integerArray" class="org.springframework.beans.factory.HasMap">	
		<property name="integerArray">
			<list>
				<value>0</value>
				<value>1</value>
				<value>2</value>
			</list>
		</property>
	</bean>
	-->

</beans>		
	
	